---
- name: Create directories for SAP kit on target
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
  loop:
    - "{{ s4app_kit }}"
    - "{{ s4app_kit }}/swpm"
    - "{{ s4app_kit }}/export"

- name: Gather the package facts for Ansible controller
  package_facts:
    manager: auto
  delegate_to: localhost

- name: Check if rsync package is available on Ansible controller
  set_fact:
    rsync_found_controller: true
  when: "'rsync' in ansible_facts.packages"
  delegate_to: localhost

- name: Gather the package facts for Red Hat target
  package_facts:
    manager: auto
  when: ansible_facts['os_family'] == "RedHat"

- name: Gather the packages for Suse target
  shell: zypper search -i --match-exact rsync
  args:
    warn: false
  register: rsync_search_result
  when: ansible_facts['os_family'] == "Suse"

- name: Check if rsync package is available
  set_fact:
    rsync_found_target: true
  when: ansible_facts['os_family'] == "RedHat" and "'rsync' in ansible_facts.packages" or ansible_facts['os_family'] == "Suse" and rsync_search_result.rc == 0

- name: Copy S/4HANA kit to target using rsync
  synchronize:
    src: "{{ item.s4apps_src }}"
    dest: "{{ item.s4apps_dest }}"
    checksum: yes
  loop: "{{ s4apps_kit }}"
  when: rsync_found_controller is defined and rsync_found_target is defined

- name: Copy S/4HANA kit to target when rsync is not available
  copy:
    src: "{{ item.s4apps_src }}"
    dest: "{{ item.s4apps_dest }}"
    owner: root
    group: root
    mode: 0777
  loop: "{{ s4apps_kit }}"
  when: rsync_found_controller is not defined or rsync_found_target is not defined

- name: Recursively change the ownership and permissions on the SAP kit directory
  file:
    path: "{{ s4app_kit }}"
    state: directory
    mode: 0777
    recurse: yes
    owner: root
    group: root

- name: Check if SWPM archive content was already extracted
  stat:
    path: "{{ s4app_kit }}/swpm/sapinst"
  register: file_status

- name: Extract SWPM archive
  command: "{{ s4app_kit }}/sapcar -xf {{ s4app_kit }}/swpm.sar -R {{ s4app_kit }}/swpm"
  when: not file_status.stat.exists
...
